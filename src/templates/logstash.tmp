
input {
{% if 'yarn' in roles %}
    lumberjack{
    port =>5000
    ssl_certificate => "{{sslcert}}"
    ssl_key=> "{{sslkey}}"
    tags=>"{{appName}}"
}
    {% if yarnHEnd == 'None' %}
    #No Yarn History Server Set
    {% else %}
    http_poller {
        urls => {
            Topology => {
            method => get
            url => "http://{{yarnHEnd}}:{{yarnHPort}}/ws/v1/history/mapreduce/jobs"
            headers => {
                Accept => "application/json"
                }
            }
        }
        request_timeout => 60
        interval => {{yarnHPoll}}
        codec => "json"
        # A hash of request metadata info (timing, response headers, etc.) will be sent here
        # metadata_target => "http_poller_metadata"
        type =>"yarn-history"
        tags=>"{{appName}}"
    }
    {% endif %}
{% else %}
#No lumberjack needed
{% endif %}

{% if 'spark' in roles%}
graphite{
    mode => server
    port => 5002
    type => "graphite"
    tags=>"{{appName}}"
}
{% else %}
# No spark role found
{% endif%}

udp {
    port => {{udpPort}}         # 25826 matches port specified in collectd.conf
    buffer_size => 1452   # 1452 is the default buffer size for Collectd
    codec => collectd { } # specific Collectd codec to invoke
    type => collectd
    tags=>"{{appName}}"
}

{% if 'storm' not in roles %}
 #Storm role not defined
    {% elif StormRestIP == "None"%}
    #No Storm IP set
  
    {% elif StormRestPort == "None"%}
    #No Storm Port set
    

    {% elif StormTopologyID == "None"%}
    #No Storm Topology set
    
  {% else %}
http_poller {
  urls => {
    Topology => {
      method => get
      url => "http://{{StormRestIP}}:{{StormRestPort}}/api/v1/topology/{{StormTopologyID}}"
      headers => {
      Accept => "application/json"
      }
    }
  }
    request_timeout => 60
    interval => {{storm_interval}}
    codec => "json"
    # A hash of request metadata info (timing, response headers, etc.) will be sent here
    # metadata_target => "http_poller_metadata"
    type =>"storm-topology"
    tags=>"{{appName}}"
}

http_poller {
  urls =>{
    ClusterSummary =>{
      method => get
      url => "http://{{StormRestIP}}:{{StormRestPort}}/api/v1/cluster/summary"
      headers => {
      Accept => "application/json"
      }
    }
  }
    request_timeout => 60
    interval => {{storm_interval}}
    codec => "json"
    # A hash of request metadata info (timing, response headers, etc.) will be sent here
    # metadata_target => "http_poller_metadata"
    type =>"storm-cluster"
    tags=>"{{appName}}"
}

http_poller{
  urls =>{
    TopologyList =>{
      method => get
      url => "http://{{StormRestIP}}:{{StormRestPort}}/api/v1/topology/summary"
      headers => {
      Accept => "application/json"
      }
    }
  }
    request_timeout => 60
    interval => {{storm_interval}}
    codec => "json"
    # A hash of request metadata info (timing, response headers, etc.) will be sent here
    # metadata_target => "http_poller_metadata"
    type =>"storm-topSum"
    tags=>"{{appName}}"
}
  {% endif %}
}

filter{
{% if 'spark' in roles%}
if [type] == "graphite"{
  ruby {
        code => "
        event.to_hash.keys.each { |k| event[ k.gsub('.','_') ] = event.remove(k) if k.include?'.' }
        params = event['configuration'] && event['configuration'].to_hash
        params.keys.each { |k| params[ k.gsub('.','_') ] = params.delete(k) if k.include?'.' } unless params.nil?
       "
    }
}
{% else %}
#No spark node defined
{% endif %}


{% if 'storm' in roles %}
if [type] == "storm-topology"{
  ruby {
        code => "
  event.to_hash.keys.each { |k| event[ k.gsub('.','_') ] = event.remove(k) if k.include?'.' }
  params = event['configuration'] && event['configuration'].to_hash
        params.keys.each { |k| params[ k.gsub('.','_') ] = params.delete(k) if k.include?'.' } unless params.nil?
       "
    }

    mutate{
        add_field =>{
       {% for i in range(nBolt) %}
       "bolts_{{i}}_executors" => "%{[bolts][{{i}}][executors]}"
       "bolts_{{i}}_emitted" => "%{[bolts][{{i}}][emitted]}"
       "bolts_{{i}}_errorLapsedSecs" => "%{[bolts][{{i}}][errorLapsedSecs]}"
       "bolts_{{i}}_transferred" => "%{[bolts][{{i}}][transferred]}"
       "bolts_{{i}}_acked" => "%{[bolts][{{i}}][acked]}"
       "bolts_{{i}}_errorPort" => "%{[bolts][{{i}}][errorPort]}"
       "bolts_{{i}}_executeLatency" => "%{[bolts][{{i}}][executeLatency]}"
       "bolts_{{i}}_tasks" => "%{[bolts][{{i}}][tasks]}"
       "bolts_{{i}}_executed" => "%{[bolts][{{i}}][executed]}"
       "bolts_{{i}}_processLatency" => "%{[bolts][{{i}}][processLatency]}"
       "bolts_{{i}}_boltId" => "%{[bolts][{{i}}][boltId]}"
       "bolts_{{i}}_errorHost" => "%{[bolts][{{i}}][errorHost]}"
       "bolts_{{i}}_lastError" => "%{[bolts][{{i}}][lastError]}"
       "bolts_{{i}}_errorWorkerLogLink" => "%{[bolts][{{i}}][errorWorkerLogLink]}"
       "bolts_{{i}}_capacity" => "%{[bolts][{{i}}][capacity]}"
       "bolts_{{i}}_failed" => "%{[bolts][{{i}}][failed]}"
       "bolts_{{i}}_encodedBoltId" => "%{[bolts][{{i}}][encodedBoltId]}"
       {% endfor %}
       
      {% for n in range(nSpout) %}
       "spouts_{{n}}_executors" => "%{[spouts][{{n}}][executors]}"
       "spouts_{{n}}_emitted" => "%{[spouts][{{n}}][emitted]}"
       "spouts_{{n}}_errorLapsedSecs" => "%{[spouts][{{n}}][errorLapsedSecs]}"
       "spouts_{{n}}_completeLatency" => "%{[spouts][{{n}}][completeLatency]}"
       "spouts_{{n}}_transferred" => "%{[spouts][{{n}}][transferred]}"
       "spouts_{{n}}_acked" => "%{[spouts][{{n}}][acked]}"
       "spouts_{{n}}_errorPort" => "%{[spouts][{{n}}][errorPort]}"
       "spouts_{{n}}_spoutId" => "%{[spouts][{{n}}][spoutId]}"
       "spouts_{{n}}_tasks" => "%{[spouts][{{n}}][tasks]}"
       "spouts_{{n}}_errorHost" => "%{[spouts][{{n}}][errorHost]}"
       "spouts_{{n}}_lastError" => "%{[spouts][{{n}}][lastError]}"
       "spouts_{{n}}_errorWorkerLogLink" => "%{[spouts][{{n}}][errorWorkerLogLink]}"
       "spouts_{{n}}_failed" => "%{[spouts][{{n}}][failed]}"
       "spouts_{{n}}_encodedSpoutId" => "%{[spouts][{{n}}][encodedSpoutId]}"
       {% endfor %}
       
       "topologyStats_10m_window" => "%{[topologyStats][0][window]}"
       "topologyStats_10m_emitted" => "%{[topologyStats][0][emitted]}"
       "topologyStats_10m_transferred" => "%{[topologyStats][0][transferred]}"
       "topologyStats_10m_completeLatency" => "%{[topologyStats][0][completeLatency]}"
       "topologyStats_10m_acked" => "%{[topologyStats][0][acked]}"
       "topologyStats_10m_failed" => "%{[topologyStats][0][failed]}"

       "topologyStats_3h_window" => "%{[topologyStats][1][window]}"
       "topologyStats_3h_emitted" => "%{[topologyStats][1][emitted]}"
       "topologyStats_3h_transferred" => "%{[topologyStats][1][transferred]}"
       "topologyStats_3h_completeLatency" => "%{[topologyStats][1][completeLatency]}"
       "topologyStats_3h_acked" => "%{[topologyStats][1][acked]}"
       "topologyStats_3h_failed" => "%{[topologyStats][1][failed]}"

       "topologyStats_1d_window" => "%{[topologyStats][2][window]}"
       "topologyStats_1d_emitted" => "%{[topologyStats][2][emitted]}"
       "topologyStats_1d_transferred" => "%{[topologyStats][2][transferred]}"
       "topologyStats_1d_completeLatency" => "%{[topologyStats][2][completeLatency]}"
       "topologyStats_1d_acked" => "%{[topologyStats][2][acked]}"
       "topologyStats_1d_failed" => "%{[topologyStats][2][failed]}"

       "topologyStats_all_window" => "%{[topologyStats][3][window]}"
       "topologyStats_all_emitted" => "%{[topologyStats][3][emitted]}"
       "topologyStats_all_transferred" => "%{[topologyStats][3][transferred]}"
       "topologyStats_all_completeLatency" => "%{[topologyStats][3][completeLatency]}"
       "topologyStats_all_acked" => "%{[topologyStats][3][acked]}"
       "topologyStats_all_failed" => "%{[topologyStats][3][failed]}"
       }
       remove_field => ["bolts", "spouts", "visualizationTable", "topologyStats"]
    }
    mutate{
        {% for i in range(nBolt) %}
        convert => {"bolts_{{i}}_capacity" => "float"}
        convert => {"bolts_{{i}}_executeLatency" => "float"}
        convert => {"bolts_{{i}}_processLatency" => "float"}
        {% endfor %}
        {% for n in range(nSpout) %}
        convert => {"spouts_{{n}}_completeLatency" => "float"}
        {% endfor %}
        convert => {"topologyStats_10m_window" => "float"}
        convert => {"topologyStats_10m_completeLatency" => "float"}
        convert => {"topologyStats_3h_window" => "float"}
        convert => {"topologyStats_3h_completeLatency" => "float"}
        convert => {"topologyStats_1d_window" => "float"}
        convert => {"topologyStats_1d_completeLatency" => "float"}
        convert => {"topologyStats_all_completeLatency" => "float"}
     }
}
if [type] == "storm-topSum"{
  mutate {
    add_field =>{
      "topology_0_id" => "%{[topologies][0][id]}"
      "topology_0_encodedId" => "%{[topologies][0][encodedId]}"
      "topology_0_name" => "%{[topologies][0][name]}"
      "topology_0_status" => "%{[topologies][0][status]}"
      "topology_0_uptime" => "%{[topologies][0][uptime]}"
      "topology_0_tasksTotal" => "%{[topologies][0][tasksTotal]}"
      "topology_0_workersTotal" => "%{[topologies][0][workersTotal]}"
      "topology_0_executorsTotal" => "%{[topologies][0][executorsTotal]}"
    }
    remove_field => ["topologies"]
  }
}
{% else %}
##Storm role not defined
{% endif %}

{% if 'yarn' in roles %}
if [type]=="nodemanager-metrics"{ #same as set in logstash-forwarder configuration json
  grok{
    break_on_match => false
    #metricssystem.MetricsSystem
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll:float}"]

    #ugi.UgiMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}
    "]

    #jvm.JvmMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{DATA:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

    #yarn.NodeManagerMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ContainersLaunched=%{NUMBER:ContainersLaunched:float}, ContainersCompleted=%{NUMBER:ContainersCompleted:float}, ContainersFailed=%{NUMBER:ContainersFailed:float}, ContainersKilled=%{NUMBER:ContainersKilled:float}, ContainersIniting=%{NUMBER:ContainersIniting:float}, ContainersRunning=%{NUMBER:ContainersRunning:float}, AllocatedGB=%{NUMBER:AllocatedGB:float}, AllocatedContainers=%{NUMBER:AllocatedContainers:float}, AvailableGB=%{NUMBER:AvailableGB:float}, AllocatedVCores=%{NUMBER:AllocatedVCores:float}, AvailableVCores=%{NUMBER:AvailableVCores:float}, ContainerLaunchDurationNumOps=%{NUMBER:ContainerLaunchDurationNumOps:float}, ContainerLaunchDurationAvgTime=%{NUMBER:ContainerLaunchDurationAvgTime:float}"]

    #mapred.ShuffleMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ShuffleOutputBytes=%{NUMBER:ShuffleOutputBytes:float}, ShuffleOutputsFailed=%{NUMBER:ShuffleOutputsFailed:float}, ShuffleOutputsOK=%{NUMBER:ShuffleOutputsOK:float}, ShuffleConnections=%{NUMBER:ShuffleConnections:float}"]

    #rpc.rpc
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

    #rpcdetailed.rpcdetailed
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}"]
  }
 }


if [type]=="datanode-metrics"{
  grok{
     break_on_match => false
     #metricssystem.MetricsSystem
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

    #ugi.UgiMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}
    "]

    #jvm.JvmMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, GcNumWarnThresholdExceeded=%{NUMBER:GcNumWarnThresholdExceeded:float}, GcNumInfoThresholdExceeded=%{NUMBER:GcNumInfoThresholdExceeded:float}, GcTotalExtraSleepTime=%{NUMBER:GcTotalExtraSleepTime:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

    #dfs.datanode
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, BytesWritten=%{NUMBER:BytesWritten:float}, BytesRead=%{NUMBER:BytesRead:float}, BlocksWritten=%{NUMBER:BlocksWritten:float}, BlocksRead=%{NUMBER:BlocksRead:float}, BlocksReplicated=%{NUMBER:BlocksReplicated:float}, BlocksRemoved=%{NUMBER:BlocksRemoved:float}, BlocksVerified=%{NUMBER:BlocksVerified:float}, BlockVerificationFailures=%{NUMBER:BlockVerificationFailures:float}, BlocksCached=%{NUMBER:BlocksCached:float}, BlocksUncached=%{NUMBER:BlocksUncached:float}, ReadsFromLocalClient=%{NUMBER:ReadsFromLocalClient:float}, ReadsFromRemoteClient=%{NUMBER:ReadsFromRemoteClient:float}, WritesFromLocalClient=%{NUMBER:WritesFromLocalClient:float}, WritesFromRemoteClient=%{NUMBER:WritesFromRemoteClient:float}, BlocksGetLocalPathInfo=%{NUMBER:BlocksGetLocalPathInfo:float}, RamDiskBlocksWrite=%{NUMBER:RamDiskBlocksWrite:float}, RamDiskBlocksWriteFallback=%{NUMBER:RamDiskBlocksWriteFallback:float}, RamDiskBytesWrite=%{NUMBER:RamDiskBytesWrite:float}, RamDiskBlocksReadHits=%{NUMBER:RamDiskBlocksReadHits:float}, RamDiskBlocksEvicted=%{NUMBER:RamDiskBlocksEvicted:float}, RamDiskBlocksEvictedWithoutRead=%{NUMBER:RamDiskBlocksEvictedWithoutRead:float}, RamDiskBlocksEvictionWindowMsNumOps=%{NUMBER:RamDiskBlocksEvictionWindowMsNumOps:float}, RamDiskBlocksEvictionWindowMsAvgTime=%{NUMBER:RamDiskBlocksEvictionWindowMsAvgTime:float}, RamDiskBlocksLazyPersisted=%{NUMBER:RamDiskBlocksLazyPersisted:float}, RamDiskBlocksDeletedBeforeLazyPersisted=%{NUMBER:RamDiskBlocksDeletedBeforeLazyPersisted:float}, RamDiskBytesLazyPersisted=%{NUMBER:RamDiskBytesLazyPersisted:float}, RamDiskBlocksLazyPersistWindowMsNumOps=%{NUMBER:RamDiskBlocksLazyPersistWindowMsNumOps:float}, RamDiskBlocksLazyPersistWindowMsAvgTime=%{NUMBER:RamDiskBlocksLazyPersistWindowMsAvgTime:float}, FsyncCount=%{NUMBER:FsyncCount:float}, VolumeFailures=%{NUMBER:VolumeFailures:float}, DatanodeNetworkErrors=%{NUMBER:DatanodeNetworkErrors:float}, ReadBlockOpNumOps=%{NUMBER:ReadBlockOpNumOps:float}, ReadBlockOpAvgTime=%{NUMBER:ReadBlockOpAvgTime:float}, WriteBlockOpNumOps=%{NUMBER:WriteBlockOpNumOps:float}, WriteBlockOpAvgTime=%{NUMBER:WriteBlockOpAvgTime:float}, BlockChecksumOpNumOps=%{NUMBER:BlockChecksumOpNumOps:float}, BlockChecksumOpAvgTime=%{NUMBER:BlockChecksumOpAvgTime:float}, CopyBlockOpNumOps=%{NUMBER:CopyBlockOpNumOps:float}, CopyBlockOpAvgTime=%{NUMBER:CopyBlockOpAvgTime:float}, ReplaceBlockOpNumOps=%{NUMBER:ReplaceBlockOpNumOps:float}, ReplaceBlockOpAvgTime=%{NUMBER:ReplaceBlockOpAvgTime:float}, HeartbeatsNumOps=%{NUMBER:HeartbeatsNumOps:float}, HeartbeatsAvgTime=%{NUMBER:HeartbeatsAvgTime:float}, BlockReportsNumOps=%{NUMBER:BlockReportsNumOps:float}, BlockReportsAvgTime=%{NUMBER:BlockReportsAvgTime:float}, CacheReportsNumOps=%{NUMBER:CacheReportsNumOps:float}, CacheReportsAvgTime=%{NUMBER:CacheReportsAvgTime:float}, PacketAckRoundTripTimeNanosNumOps=%{NUMBER:PacketAckRoundTripTimeNanosNumOps:float}, PacketAckRoundTripTimeNanosAvgTime=%{NUMBER:PacketAckRoundTripTimeNanosAvgTime:float}, FlushNanosNumOps=%{NUMBER:FlushNanosNumOps:float}, FlushNanosAvgTime=%{NUMBER:FlushNanosAvgTime:float}, FsyncNanosNumOps=%{NUMBER:FsyncNanosNumOps:float}, FsyncNanosAvgTime=%{NUMBER:FsyncNanosAvgTime:float}, SendDataPacketBlockedOnNetworkNanosNumOps=%{NUMBER:SendDataPacketBlockedOnNetworkNanosNumOps:float}, SendDataPacketBlockedOnNetworkNanosAvgTime=%{NUMBER:SendDataPacketBlockedOnNetworkNanosAvgTime:float}, SendDataPacketTransferNanosNumOps=%{NUMBER:SendDataPacketTransferNanosNumOps:float}, SendDataPacketTransferNanosAvgTime=%{NUMBER:SendDataPacketTransferNanosAvgTime:float}"]

    #dfs.datanode(bis)
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, BytesWritten=%{NUMBER:BytesWritten:float}, TotalWriteTime=%{NUMBER:TotalWriteTime:float}, BytesRead=%{NUMBER:BytesRead:float}, TotalReadTime=%{NUMBER:TotalReadTime:float}, BlocksWritten=%{NUMBER:BlocksWritten:float}, BlocksRead=%{NUMBER:BlocksRead:float}, BlocksReplicated=%{NUMBER:BlocksReplicated:float}, BlocksRemoved=%{NUMBER:BlocksRemoved:float}, BlocksVerified=%{NUMBER:BlocksVerified:float}, BlockVerificationFailures=%{NUMBER:BlockVerificationFailures:float}, BlocksCached=%{NUMBER:BlocksCached:float}, BlocksUncached=%{NUMBER:BlocksUncached:float}, ReadsFromLocalClient=%{NUMBER:ReadsFromLocalClient:float}, ReadsFromRemoteClient=%{NUMBER:ReadsFromRemoteClient:float}, WritesFromLocalClient=%{NUMBER:WritesFromLocalClient:float}, WritesFromRemoteClient=%{NUMBER:WritesFromRemoteClient:float}, BlocksGetLocalPathInfo=%{NUMBER:BlocksGetLocalPathInfo:float}, RemoteBytesRead=%{NUMBER:RemoteBytesRead:float}, RemoteBytesWritten=%{NUMBER:RemoteBytesWritten:float}, RamDiskBlocksWrite=%{NUMBER:RamDiskBlocksWrite:float}, RamDiskBlocksWriteFallback=%{NUMBER:RamDiskBlocksWriteFallback:float}, RamDiskBytesWrite=%{NUMBER:RamDiskBytesWrite:float}, RamDiskBlocksReadHits=%{NUMBER:RamDiskBlocksReadHits:float}, RamDiskBlocksEvicted=%{NUMBER:RamDiskBlocksEvicted:float}, RamDiskBlocksEvictedWithoutRead=%{NUMBER:RamDiskBlocksEvictedWithoutRead:float}, RamDiskBlocksEvictionWindowMsNumOps=%{NUMBER:RamDiskBlocksEvictionWindowMsNumOps:float}, RamDiskBlocksEvictionWindowMsAvgTime=%{NUMBER:RamDiskBlocksEvictionWindowMsAvgTime:float}, RamDiskBlocksLazyPersisted=%{NUMBER:RamDiskBlocksLazyPersisted:float}, RamDiskBlocksDeletedBeforeLazyPersisted=%{NUMBER:RamDiskBlocksDeletedBeforeLazyPersisted:float}, RamDiskBytesLazyPersisted=%{NUMBER:RamDiskBytesLazyPersisted:float}, RamDiskBlocksLazyPersistWindowMsNumOps=%{NUMBER:RamDiskBlocksLazyPersistWindowMsNumOps:float}, RamDiskBlocksLazyPersistWindowMsAvgTime=%{NUMBER:RamDiskBlocksLazyPersistWindowMsAvgTime:float}, FsyncCount=%{NUMBER:FsyncCount:float}, VolumeFailures=%{NUMBER:VolumeFailures:float}, DatanodeNetworkErrors=%{NUMBER:DatanodeNetworkErrors:float}, ReadBlockOpNumOps=%{NUMBER:ReadBlockOpNumOps:float}, ReadBlockOpAvgTime=%{NUMBER:ReadBlockOpAvgTime:float}, WriteBlockOpNumOps=%{NUMBER:WriteBlockOpNumOps:float}, WriteBlockOpAvgTime=%{NUMBER:WriteBlockOpAvgTime:float}, BlockChecksumOpNumOps=%{NUMBER:BlockChecksumOpNumOps:float}, BlockChecksumOpAvgTime=%{NUMBER:BlockChecksumOpAvgTime:float}, CopyBlockOpNumOps=%{NUMBER:CopyBlockOpNumOps:float}, CopyBlockOpAvgTime=%{NUMBER:CopyBlockOpAvgTime:float}, ReplaceBlockOpNumOps=%{NUMBER:ReplaceBlockOpNumOps:float}, ReplaceBlockOpAvgTime=%{NUMBER:ReplaceBlockOpAvgTime:float}, HeartbeatsNumOps=%{NUMBER:HeartbeatsNumOps:float}, HeartbeatsAvgTime=%{NUMBER:HeartbeatsAvgTime:float}, BlockReportsNumOps=%{NUMBER:BlockReportsNumOps:float}, BlockReportsAvgTime=%{NUMBER:BlockReportsAvgTime:float}, IncrementalBlockReportsNumOps=%{NUMBER:IncrementalBlockReportsNumOps:float}, IncrementalBlockReportsAvgTime=%{NUMBER:IncrementalBlockReportsAvgTime:float}, CacheReportsNumOps=%{NUMBER:CacheReportsNumOps:float}, CacheReportsAvgTime=%{NUMBER:CacheReportsAvgTime:float}, PacketAckRoundTripTimeNanosNumOps=%{NUMBER:PacketAckRoundTripTimeNanosNumOps:float}, PacketAckRoundTripTimeNanosAvgTime=%{NUMBER:PacketAckRoundTripTimeNanosAvgTime:float}, FlushNanosNumOps=%{NUMBER:FlushNanosNumOps:float}, FlushNanosAvgTime=%{NUMBER:FlushNanosAvgTime:float}, FsyncNanosNumOps=%{NUMBER:FsyncNanosNumOps:float}, FsyncNanosAvgTime=%{NUMBER:FsyncNanosAvgTime:float}, SendDataPacketBlockedOnNetworkNanosNumOps=%{NUMBER:SendDataPacketBlockedOnNetworkNanosNumOps:float}, SendDataPacketBlockedOnNetworkNanosAvgTime=%{NUMBER:SendDataPacketBlockedOnNetworkNanosAvgTime:float}, SendDataPacketTransferNanosNumOps=%{NUMBER:SendDataPacketTransferNanosNumOps:float}, SendDataPacketTransferNanosAvgTime=%{NUMBER:SendDataPacketTransferNanosAvgTime:float}"]

    #rpc.rpc
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

    #rpc.rpc(bis)
    match=>["message", "\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, RpcClientBackoff=%{NUMBER:RpcClientBackoff:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

    #rpcdetailed.rpcdetailed
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}"]
  }
}

if [type]=="resourcemanager-metrics"{
  grok{
    break_on_match => false
    #yarn.QueueMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Queue=%{USER:Queue}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, running_0=%{NUMBER:running_0:float}, running_60=%{NUMBER:running_60:float}, running_300=%{NUMBER:running_300:float}, running_1440=%{NUMBER:running_1440:float}, FairShareMB=%{NUMBER:FairShareMB:float}, FairShareVCores=%{NUMBER:FairShareVCores:float}, SteadyFairShareMB=%{NUMBER:SteadyFairShareMB:float}, SteadyFairShareVCores=%{NUMBER:SteadyFairShareVCores:float}, MinShareMB=%{NUMBER:MinShareMB:float}, MinShareVCores=%{NUMBER:MinShareVCores:float}, MaxShareMB=%{NUMBER:MaxShareMB:float}, MaxShareVCores=%{NUMBER:MaxShareVCores:float}, AppsSubmitted=%{NUMBER:AppsSubmitted:float}, AppsRunning=%{NUMBER:AppsRunning:float}, AppsPending=%{NUMBER:AppsPending:float}, AppsCompleted=%{NUMBER:AppsCompleted:float}, AppsKilled=%{NUMBER:AppsKilled:float}, AppsFailed=%{NUMBER:AppsFailed:float}, AllocatedMB=%{NUMBER:AllocatedMB:float}, AllocatedVCores=%{NUMBER:AllocatedVCores:float}, AllocatedContainers=%{NUMBER:AllocatedContainers:float}, AggregateContainersAllocated=%{NUMBER:AggregateContainersAllocated:float}, AggregateContainersReleased=%{NUMBER:AggregateContainersReleased:float}, AvailableMB=%{NUMBER:AvailableMB:float}, AvailableVCores=%{NUMBER:AvailableVCores:float}, PendingMB=%{NUMBER:PendingMB:float}, PendingVCores=%{NUMBER:PendingVCores:float}, PendingContainers=%{NUMBER:PendingContainers:float}, ReservedMB=%{NUMBER:ReservedMB:float}, ReservedVCores=%{NUMBER:ReservedVCores:float}, ReservedContainers=%{NUMBER:ReservedContainers:float}, ActiveUsers=%{NUMBER:ActiveUsers:float}, ActiveApplications=%{NUMBER:ActiveApplications:float}, AppAttemptFirstContainerAllocationDelayNumOps=%{NUMBER:AppAttemptFirstContainerAllocationDelayNumOps:float}, AppAttemptFirstContainerAllocationDelayAvgTime=%{NUMBER:AppAttemptFirstContainerAllocationDelayAvgTime:float}"]

     ##yarn.QueueMetrics(bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Queue=%{WORD:Queue}, User=%{WORD:user}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, running_0=%{NUMBER:running_0:float}, running_60=%{NUMBER:running_60:float}, running_300=%{NUMBER:running_300:float}, running_1440=%{NUMBER:running_1440:float}, AppsSubmitted=%{NUMBER:AppsSubmitted:float}, AppsRunning=%{NUMBER:AppsRunning:float}, AppsPending=%{NUMBER:AppsPending:float}, AppsCompleted=%{NUMBER:AppsCompleted:float}, AppsKilled=%{NUMBER:AppsKilled:float}, AppsFailed=%{NUMBER:AppsFailed:float}, AllocatedMB=%{NUMBER:AllocatedMB:float}, AllocatedVCores=%{NUMBER:AllocatedVCores:float}, AllocatedContainers=%{NUMBER:AllocatedContainers:float}, AggregateContainersAllocated=%{NUMBER:AggregateContainersAllocated:float}, AggregateContainersReleased=%{NUMBER:AggregateContainersReleased:float}, AvailableMB=%{NUMBER:AvailableMB:float}, AvailableVCores=%{NUMBER:AvailableVCores:float}, PendingMB=%{NUMBER:PendingMB}, PendingVCores=%{NUMBER:PendingVCores:float}, PendingContainers=%{NUMBER:PendingContainers:float}, ReservedMB=%{NUMBER:ReservedMB:float}, ReservedVCores=%{NUMBER:ReservedVCores:float}, ReservedContainers=%{NUMBER:ReservedContainers:float}, ActiveUsers=%{NUMBER:ActiveUsers:float}, ActiveApplications=%{NUMBER:ActiveApplications:float}, AppAttemptFirstContainerAllocationDelayNumOps=%{NUMBER:AppAttemptFirstContainerAllocationDelayNumOps:float}, AppAttemptFirstContainerAllocationDelayAvgTime=%{NUMBER:AppAttemptFirstContainerAllocationDelayAvgTime:float}"]

     #rpc.rpc
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

     #rpc.rpc(bis)
     match=>["message", "\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, RpcClientBackoff=%{NUMBER:RpcClientBackoff:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

     #rpcdetailed
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, RegisterNodeManagerNumOps=%{NUMBER:RegisterNodeManagerNumOps:float}, RegisterNodeManagerAvgTime=%{NUMBER:RegisterNodeManagerAvgTime:float}, NodeHeartbeatNumOps=%{NUMBER:NodeHeartbeatNumOps:float}, NodeHeartbeatAvgTime=%{NUMBER:NodeHeartbeatAvgTime:float}"]

     #rpcdetailed (bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, GetFileInfoNumOps=%{NUMBER:GetFileInfoNumOps:float}, GetFileInfoAvgTime=%{NUMBER:GetFileInfoAvgTime:float}, GetListingNumOps=%{NUMBER:GetListingNumOps:float}, GetListingAvgTime=%{NUMBER:GetListingAvgTime:float}, ListCacheDirectivesNumOps=%{NUMBER:ListCacheDirectivesNumOps:float}, ListCacheDirectivesAvgTime=%{NUMBER:ListCacheDirectivesAvgTime:float}, ListCachePoolsNumOps=%{NUMBER:ListCachePoolsNumOps:float}, ListCachePoolsAvgTime=%{NUMBER:ListCachePoolsAvgTime:float}, SafeModeExceptionNumOps=%{NUMBER:SafeModeExceptionNumOps:float}, SafeModeExceptionAvgTime=%{NUMBER:SafeModeExceptionAvgTime:float}, CreateNumOps=%{NUMBER:CreateNumOps:float}, CreateAvgTime=%{NUMBER:CreateAvgTime:float}, AddBlockNumOps=%{NUMBER:AddBlockNumOps:float}, AddBlockAvgTime=%{NUMBER:AddBlockAvgTime:float}, GetServerDefaultsNumOps=%{NUMBER:GetServerDefaultsNumOps:float}, GetServerDefaultsAvgTime=%{NUMBER:GetServerDefaultsAvgTime:float}, CompleteNumOps=%{NUMBER:CompleteNumOps:float}, CompleteAvgTime=%{NUMBER:CompleteAvgTime:float}, GetBlockLocationsNumOps=%{NUMBER:GetBlockLocationsNumOps:float}, GetBlockLocationsAvgTime=%{NUMBER:GetBlockLocationsAvgTime:float}, DeleteNumOps=%{NUMBER:DeleteNumOps:float}, DeleteAvgTime=%{NUMBER:DeleteAvgTime:float}"]

     #rpcdetailed (bis2)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, GetNewApplicationNumOps=%{NUMBER:GetNewApplicationNumOps:float}, GetNewApplicationAvgTime=%{NUMBER:GetNewApplicationAvgTime:float}, SubmitApplicationNumOps=%{NUMBER:SubmitApplicationNumOps:float}, SubmitApplicationAvgTime=%{NUMBER:SubmitApplicationAvgTime:float}, GetApplicationReportNumOps=%{NUMBER:GetApplicationReportNumOps:float}, GetApplicationReportAvgTime=%{NUMBER:GetApplicationReportAvgTime:float}, ApplicationNotFoundExceptionNumOps=%{NUMBER:ApplicationNotFoundExceptionNumOps:float}, ApplicationNotFoundExceptionAvgTime=%{NUMBER:ApplicationNotFoundExceptionAvgTime:float}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

     #yarn.ClusterMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: ClusterMetrics=%{WORD:ClusterMetrics}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveNMs=%{NUMBER:NumActiveNMs:float}, NumDecommissionedNMs=%{NUMBER:NumDecommissionedNMs:float}, NumLostNMs=%{NUMBER:NumLostNMs:float}, NumUnhealthyNMs=%{NUMBER:NumUnhealthyNMs:float}, NumRebootedNMs=%{NUMBER:NumRebootedNMs:float}, AMLaunchDelayNumOps=%{NUMBER:AMLaunchDelayNumOps:float}, AMLaunchDelayAvgTime=%{NUMBER:AMLaunchDelayAvgTime:float}, AMRegisterDelayNumOps=%{NUMBER:AMRegisterDelayNumOps:float}, AMRegisterDelayAvgTime=%{NUMBER:AMRegisterDelayAvgTime:float}"]

     #fairscheduler-op-durations.FSOpDurations
     match=>["message","\A%{NUMBER:job_id} %{NOTSPACE:serviceType}.%{WORD:serviceMetrics}: FSOpDurations=FSOpDurations, Context=%{NOTSPACE:context}, Hostname=%{HOSTNAME}, ContinuousSchedulingRunNumOps=%{NUMBER:ContinuousSchedulingRunNumOps:float}, ContinuousSchedulingRunAvgTime=%{NUMBER:ContinuousSchedulingRunAvgTime:float}, ContinuousSchedulingRunStdevTime=%{NUMBER:ContinuousSchedulingRunStdevTime:float}, ContinuousSchedulingRunIMinTime=%{NUMBER:ContinuousSchedulingRunIMinTime:float}, ContinuousSchedulingRunIMaxTime=%{NUMBER:ContinuousSchedulingRunIMaxTime:float}, ContinuousSchedulingRunMinTime=%{NUMBER:ContinuousSchedulingRunMinTime:float}, ContinuousSchedulingRunMaxTime=%{NUMBER:ContinuousSchedulingRunMaxTime:float}, NodeUpdateCallNumOps=%{NUMBER:NodeUpdateCallNumOps:float}, NodeUpdateCallAvgTime=%{NUMBER:NodeUpdateCallAvgTime:float}, NodeUpdateCallStdevTime=%{NUMBER:NodeUpdateCallStdevTime:float}, NodeUpdateCallIMinTime=%{NUMBER:NodeUpdateCallIMinTime:float}, NodeUpdateCallIMaxTime=%{NOTSPACE:NodeUpdateCallIMaxTime:float}, NodeUpdateCallMinTime=%{NUMBER:NodeUpdateCallMinTime:float}, NodeUpdateCallMaxTime=%{NUMBER:NodeUpdateCallMaxTime:float}, UpdateThreadRunNumOps=%{NUMBER:UpdateThreadRunNumOps:float}, UpdateThreadRunAvgTime=%{NUMBER:UpdateThreadRunAvgTime:float}, UpdateThreadRunStdevTime=%{NUMBER:UpdateThreadRunStdevTime:float}, UpdateThreadRunIMinTime=%{NUMBER:UpdateThreadRunIMinTime:float}, UpdateThreadRunIMaxTime=%{NUMBER:UpdateThreadRunIMaxTime:float}, UpdateThreadRunMinTime=%{NUMBER:UpdateThreadRunMinTime:float}, UpdateThreadRunMaxTime=%{NUMBER:UpdateThreadRunMaxTime:float}, UpdateCallNumOps=%{NUMBER:UpdateCallNumOps:float}, UpdateCallAvgTime=%{NUMBER:UpdateCallAvgTime:float}, UpdateCallStdevTime=%{NUMBER:UpdateCallStdevTime:float}, UpdateCallIMinTime=%{NUMBER:UpdateCallIMinTime:float}, UpdateCallIMaxTime=%{NUMBER:UpdateCallIMaxTime:float}, UpdateCallMinTime=%{NUMBER:UpdateCallMinTime:float}, UpdateCallMaxTime=%{NUMBER:UpdateCallMaxTime:float}, PreemptCallNumOps=%{NUMBER:PreemptCallNumOps:float}, PreemptCallAvgTime=%{NUMBER:PreemptCallAvgTime:float}, PreemptCallStdevTime=%{NUMBER:PreemptCallStdevTime:float}, PreemptCallIMinTime=%{NOTSPACE:PreemptCallIMinTime:float}, PreemptCallIMaxTime=%{NOTSPACE:PreemptCallIMaxTime:float}, PreemptCallMinTime=%{NOTSPACE:PreemptCallMinTime:float}, PreemptCallMaxTime=%{NOTSPACE:PreemptCallMaxTime:float}"]

     #fairscheduler-op-duration.FSOpDurations(bis)
     #match=>["message","\A%{NUMBER:job_id} %{NOTSPACE:serviceType}.%{WORD:serviceMetrics}: FSOpDurations=FSOpDurations, Context=%{NOTSPACE:context}, Hostname=%{HOSTNAME}, ContinuousSchedulingRunNumOps=%{NUMBER:ContinuousSchedulingRunNumOps:float}, ContinuousSchedulingRunAvgTime=%{NUMBER:ContinuousSchedulingRunAvgTime:float}, ContinuousSchedulingRunStdevTime=%{NUMBER:ContinuousSchedulingRunStdevTime:float}, ContinuousSchedulingRunIMinTime=%{NUMBER:ContinuousSchedulingRunIMinTime:float}, ContinuousSchedulingRunIMaxTime=%{NUMBER:ContinuousSchedulingRunIMaxTime:float}, ContinuousSchedulingRunMinTime=%{NUMBER:ContinuousSchedulingRunMinTime:float}, ContinuousSchedulingRunMaxTime=%{NUMBER:ContinuousSchedulingRunMaxTime:float}, ContinuousSchedulingRunINumOps=%{NUMBER:ContinuousSchedulingRunINumOps:float}, NodeUpdateCallNumOps=%{NUMBER:NodeUpdateCallNumOps:float}, NodeUpdateCallAvgTime=%{NUMBER:NodeUpdateCallAvgTime:float}, NodeUpdateCallStdevTime=%{NUMBER:NodeUpdateCallStdevTime:float}, NodeUpdateCallIMinTime=%{NUMBER:NodeUpdateCallIMinTime:float}, NodeUpdateCallIMaxTime=%{NUMBER:NodeUpdateCallIMaxTime:float}, NodeUpdateCallMinTime=%{NUMBER:NodeUpdateCallMinTime:float}, NodeUpdateCallMaxTime=%{NUMBER:NodeUpdateCallMaxTime:float}, NodeUpdateCallINumOps=%{NUMBER:NodeUpdateCallINumOps:float}, UpdateThreadRunNumOps=%{NUMBER:UpdateThreadRunNumOps:float}, UpdateThreadRunAvgTime=%{NUMBER:UpdateThreadRunAvgTime:float}, UpdateThreadRunStdevTime=%{NUMBER:UpdateThreadRunStdevTime:float}, UpdateThreadRunIMinTime=%{NUMBER:UpdateThreadRunIMinTime:float}, UpdateThreadRunIMaxTime=%{NUMBER:UpdateThreadRunIMaxTime:float}, UpdateThreadRunMinTime=%{NUMBER:UpdateThreadRunMinTime:float}, UpdateThreadRunMaxTime=%{NUMBER:UpdateThreadRunMaxTime:float}, UpdateThreadRunINumOps=%{NUMBER:UpdateThreadRunINumOps:float}, UpdateCallNumOps=%{NUMBER:UpdateCallNumOps:float}, UpdateCallAvgTime=%{NUMBER:UpdateCallAvgTime:float}, UpdateCallStdevTime=%{NUMBER:UpdateCallStdevTime:float}, UpdateCallIMinTime=%{NUMBER:UpdateCallIMinTime:float}, UpdateCallIMaxTime=%{NUMBER:UpdateCallIMaxTime:float}, UpdateCallMinTime=%{NUMBER:UpdateCallMinTime:float}, UpdateCallMaxTime=%{NUMBER:UpdateCallMaxTime:float}, UpdateCallINumOps=%{NUMBER:UpdateCallINumOps:float}, PreemptCallNumOps=%{NUMBER:PreemptCallNumOps:float}, PreemptCallAvgTime=%{NUMBER:PreemptCallAvgTime:float}, PreemptCallStdevTime=%{NUMBER:PreemptCallStdevTime:float}, PreemptCallIMinTime=%{BASE16FLOAT:PreemptCallIMinTime}, PreemptCallIMaxTime=%{NOTSPACE:PreemptCallIMaxTime}, PreemptCallMinTime=%{BASE16FLOAT:PreemptCallMinTime}, PreemptCallMaxTime=%{NOTSPACE:PreemptCallMaxTime}, PreemptCallINumOps=%{NUMBER:PreemptCallINumOps:float}"]

     #fairscheduler-op-duration.FSOpDurations(bis1)
     match=>["message","\A%{NUMBER:job_id} %{NOTSPACE:serviceType}.%{WORD:serviceMetrics}: FSOpDurations=FSOpDurations, Context=%{NOTSPACE:context}, Hostname=%{HOSTNAME}, ContinuousSchedulingRunNumOps=%{NUMBER:ContinuousSchedulingRunNumOps:float}, ContinuousSchedulingRunAvgTime=%{NUMBER:ContinuousSchedulingRunAvgTime:float}, ContinuousSchedulingRunStdevTime=%{NUMBER:ContinuousSchedulingRunStdevTime:float}, ContinuousSchedulingRunIMinTime=%{NUMBER:ContinuousSchedulingRunIMinTime:float}, ContinuousSchedulingRunIMaxTime=%{NUMBER:ContinuousSchedulingRunIMaxTime:float}, ContinuousSchedulingRunMinTime=%{NUMBER:ContinuousSchedulingRunMinTime:float}, ContinuousSchedulingRunMaxTime=%{NUMBER:ContinuousSchedulingRunMaxTime:float}, ContinuousSchedulingRunINumOps=%{NUMBER:ContinuousSchedulingRunINumOps:float}, NodeUpdateCallNumOps=%{NUMBER:NodeUpdateCallNumOps:float}, NodeUpdateCallAvgTime=%{NUMBER:NodeUpdateCallAvgTime:float}, NodeUpdateCallStdevTime=%{NUMBER:NodeUpdateCallStdevTime:float}, NodeUpdateCallIMinTime=%{NUMBER:NodeUpdateCallIMinTime:float}, NodeUpdateCallIMaxTime=%{NOTSPACE:NodeUpdateCallIMaxTime}, NodeUpdateCallMinTime=%{NUMBER:NodeUpdateCallMinTime:float}, NodeUpdateCallMaxTime=%{NUMBER:NodeUpdateCallMaxTime:float}, NodeUpdateCallINumOps=%{NUMBER:NodeUpdateCallINumOps:float}, UpdateThreadRunNumOps=%{NUMBER:UpdateThreadRunNumOps:float}, UpdateThreadRunAvgTime=%{NUMBER:UpdateThreadRunAvgTime:float}, UpdateThreadRunStdevTime=%{NUMBER:UpdateThreadRunStdevTime:float}, UpdateThreadRunIMinTime=%{NUMBER:UpdateThreadRunIMinTime:float}, UpdateThreadRunIMaxTime=%{NOTSPACE:UpdateThreadRunIMaxTime}, UpdateThreadRunMinTime=%{NUMBER:UpdateThreadRunMinTime:float}, UpdateThreadRunMaxTime=%{NUMBER:UpdateThreadRunMaxTime:float}, UpdateThreadRunINumOps=%{NUMBER:UpdateThreadRunINumOps:float}, UpdateCallNumOps=%{NUMBER:UpdateCallNumOps:float}, UpdateCallAvgTime=%{NUMBER:UpdateCallAvgTime:float}, UpdateCallStdevTime=%{NUMBER:UpdateCallStdevTime:float}, UpdateCallIMinTime=%{NUMBER:UpdateCallIMinTime:float}, UpdateCallIMaxTime=%{NOTSPACE:UpdateCallIMaxTime}, UpdateCallMinTime=%{NUMBER:UpdateCallMinTime:float}, UpdateCallMaxTime=%{NUMBER:UpdateCallMaxTime:float}, UpdateCallINumOps=%{NUMBER:UpdateCallINumOps:float}, PreemptCallNumOps=%{NUMBER:PreemptCallNumOps:float}, PreemptCallAvgTime=%{NUMBER:PreemptCallAvgTime:float}, PreemptCallStdevTime=%{NUMBER:PreemptCallStdevTime:float}, PreemptCallIMinTime=%{BASE16FLOAT:PreemptCallIMinTime}, PreemptCallIMaxTime=%{NOTSPACE:PreemptCallIMaxTime}, PreemptCallMinTime=%{BASE16FLOAT:PreemptCallMinTime}, PreemptCallMaxTime=%{NOTSPACE:PreemptCallMaxTime}, PreemptCallINumOps=%{NUMBER:PreemptCallINumOps:float}"]
  }
}

if [type]=="namenode-metrics"{
  grok{
    break_on_match => false
    #dfs.namenode
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, CreateFileOps=%{NUMBER:CreateFileOps:float}, FilesCreated=%{NUMBER:FilesCreated:float}, FilesAppended=%{NUMBER:FilesAppended:float}, GetBlockLocations=%{NUMBER:GetBlockLocations:float}, FilesRenamed=%{NUMBER:FilesRenamed:float}, GetListingOps=%{NUMBER:GetListingOps:float}, DeleteFileOps=%{NUMBER:DeleteFileOps:float}, FilesDeleted=%{NUMBER:FilesDeleted:float}, FileInfoOps=%{NUMBER:FileInfoOps:float}, AddBlockOps=%{NUMBER:AddBlockOps:float}, GetAdditionalDatanodeOps=%{NUMBER:GetAdditionalDatanodeOps:float}, CreateSymlinkOps=%{NUMBER:CreateSymlinkOps:float}, GetLinkTargetOps=%{NUMBER:GetLinkTargetOps:float}, FilesInGetListingOps=%{NUMBER:FilesInGetListingOps:float}, AllowSnapshotOps=%{NUMBER:AllowSnapshotOps:float}, DisallowSnapshotOps=%{NUMBER:DisallowSnapshotOps:float}, CreateSnapshotOps=%{NUMBER:CreateSnapshotOps:float}, DeleteSnapshotOps=%{NUMBER:DeleteSnapshotOps:float}, RenameSnapshotOps=%{NUMBER:RenameSnapshotOps:float}, ListSnapshottableDirOps=%{NUMBER:ListSnapshottableDirOps:float}, SnapshotDiffReportOps=%{NUMBER:SnapshotDiffReportOps:float}, BlockReceivedAndDeletedOps=%{NUMBER:BlockReceivedAndDeletedOps:float}, StorageBlockReportOps=%{NUMBER:StorageBlockReportOps:float}, TransactionsNumOps=%{NUMBER:TransactionsNumOps:float}, TransactionsAvgTime=%{NUMBER:TransactionsAvgTime:float}, SyncsNumOps=%{NUMBER:SyncsNumOps:float}, SyncsAvgTime=%{NUMBER:SyncsAvgTime:float}, TransactionsBatchedInSync=%{NUMBER:TransactionsBatchedInSync:float}, BlockReportNumOps=%{NUMBER:BlockReportNumOps:float}, BlockReportAvgTime=%{NUMBER:BlockReportAvgTime:float}, CacheReportNumOps=%{NUMBER:CacheReportNumOps:float}, CacheReportAvgTime=%{NUMBER:CacheReportAvgTime:float}, SafeModeTime=%{NUMBER:SafeModeTime:float}, FsImageLoadTime=%{NUMBER:FsImageLoadTime:float}, GetEditNumOps=%{NUMBER:GetEditNumOps:float}, GetEditAvgTime=%{NUMBER:GetEditAvgTime:float}, GetImageNumOps=%{NUMBER:GetImageNumOps:float}, GetImageAvgTime=%{NUMBER:GetImageAvgTime:float}, PutImageNumOps=%{NUMBER:PutImageNumOps:float}, PutImageAvgTime=%{NUMBER:PutImageAvgTime:float}"]

     #default.StartupProgress
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Hostname=%{HOSTNAME:hostname}, ElapsedTime=%{NUMBER:ElapsedTime:float}, PercentComplete=%{NUMBER:PercentComplete:float}, LoadingFsImageCount=%{NUMBER:LoadingFsImageCount:float}, LoadingFsImageElapsedTime=%{NUMBER:LoadingFsImageElapsedTime:float}, LoadingFsImageTotal=%{NUMBER:LoadingFsImageTotal:float}, LoadingFsImagePercentComplete=%{NUMBER:LoadingFsImagePercentComplete:float}, LoadingEditsCount=%{NUMBER:LoadingEditsCount:float}, LoadingEditsElapsedTime=%{NUMBER:LoadingEditsElapsedTime:float}, LoadingEditsTotal=%{NUMBER:LoadingEditsTotal:float}, LoadingEditsPercentComplete=%{NUMBER:LoadingEditsPercentComplete:float}, SavingCheckpointCount=%{NUMBER:SavingCheckpointCount:float}, SavingCheckpointElapsedTime=%{NUMBER:SavingCheckpointElapsedTime:float}, SavingCheckpointTotal=%{NUMBER:SavingCheckpointTotal:float}, SavingCheckpointPercentComplete=%{NUMBER:SavingCheckpointPercentComplete:float}, SafeModeCount=%{NUMBER:SafeModeCount:float}, SafeModeElapsedTime=%{NUMBER:SafeModeElapsedTime:float}, SafeModeTotal=%{NUMBER:SafeModeTotal:float}, SafeModePercentComplete=%{NUMBER:SafeModePercentComplete:float}"]

     #rpc.RetryCache.NameNodeRetryCache
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}.%{WORD:serviceMetrics2}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, CacheHit=%{NUMBER:CacheHit:float}, CacheCleared=%{NUMBER:CacheCleared:float}, CacheUpdated=%{NUMBER:CacheUpdated:float}"]

     #rpc.rpc
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

     #rpc.rpc(bis)
     match=>["message", "\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, RpcClientBackoff=%{NUMBER:RpcClientBackoff:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

     #rpcdetailed.rpcdetailed
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, IOExceptionNumOps=%{NUMBER:IOExceptionNumOps}, IOExceptionAvgTime=%{NUMBER:IOExceptionAvgTime}, VersionRequestNumOps=%{NUMBER:VersionRequestNumOps}, VersionRequestAvgTime=%{NUMBER:VersionRequestAvgTime}, RegisterDatanodeNumOps=%{NUMBER:RegisterDatanodeNumOps}, RegisterDatanodeAvgTime=%{NUMBER:RegisterDatanodeAvgTime}, SendHeartbeatNumOps=%{NUMBER:SendHeartbeatNumOps}, SendHeartbeatAvgTime=%{NUMBER:SendHeartbeatAvgTime}, BlockReportNumOps=%{NUMBER:BlockReportNumOps}, BlockReportAvgTime=%{NUMBER:BlockReportAvgTime}, CacheReportNumOps=%{NUMBER:CacheReportNumOps}, CacheReportAvgTime=%{NUMBER:CacheReportAvgTime}, GetTransactionIdNumOps=%{NUMBER:GetTransactionIdNumOps}, GetTransactionIdAvgTime=%{NUMBER:GetTransactionIdAvgTime}, BlockReceivedAndDeletedNumOps=%{NUMBER:BlockReceivedAndDeletedNumOps}, BlockReceivedAndDeletedAvgTime=%{NUMBER:BlockReceivedAndDeletedAvgTime}, RollEditLogNumOps=%{NUMBER:RollEditLogNumOps}, RollEditLogAvgTime=%{NUMBER:RollEditLogAvgTime}, GetEditLogManifestNumOps=%{NUMBER:GetEditLogManifestNumOps}, GetEditLogManifestAvgTime=%{NUMBER:GetEditLogManifestAvgTime}"]

     #rpcdetailed.rpcdetailed (bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, GetFileInfoNumOps=%{NUMBER:GetFileInfoNumOps:float}, GetFileInfoAvgTime=%{NUMBER:GetFileInfoAvgTime:float}, GetListingNumOps=%{NUMBER:GetListingNumOps:float}, GetListingAvgTime=%{NUMBER:GetListingAvgTime:float}, SafeModeExceptionNumOps=%{NUMBER:SafeModeExceptionNumOps:float}, SafeModeExceptionAvgTime=%{NUMBER:SafeModeExceptionAvgTime:float}, DeleteNumOps=%{NUMBER:DeleteNumOps:float}, DeleteAvgTime=%{NUMBER:DeleteAvgTime:float}, ListCacheDirectivesNumOps=%{NUMBER:ListCacheDirectivesNumOps:float}, ListCacheDirectivesAvgTime=%{NUMBER:ListCacheDirectivesAvgTime:float}, ListCachePoolsNumOps=%{NUMBER:ListCachePoolsNumOps:float}, ListCachePoolsAvgTime=%{NUMBER:ListCachePoolsAvgTime:float}, CreateNumOps=%{NUMBER:CreateNumOps:float}, CreateAvgTime=%{NUMBER:CreateAvgTime:float}, AddBlockNumOps=%{NUMBER:AddBlockNumOps:float}, AddBlockAvgTime=%{NUMBER:AddBlockAvgTime:float}, GetServerDefaultsNumOps=%{NUMBER:GetServerDefaultsNumOps:float}, GetServerDefaultsAvgTime=%{NUMBER:GetServerDefaultsAvgTime:float}, CompleteNumOps=%{NUMBER:CompleteNumOps:float}, CompleteAvgTime=%{NUMBER:CompleteAvgTime:float}, GetBlockLocationsNumOps=%{NUMBER:GetBlockLocationsNumOps:float}, GetBlockLocationsAvgTime=%{NUMBER:GetBlockLocationsAvgTime:float}"]

     #rpcdetailed.rpcdetailed (bis2)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}"]

     #dfs.FSNamesystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, HAState=%{WORD:HAState}, Hostname=%{HOSTNAME:hostname}, MissingBlocks=%{NUMBER:MissingBlocks:float}, MissingReplOneBlocks=%{NUMBER:MissingReplOneBlocks:float}, ExpiredHeartbeats=%{NUMBER:ExpiredHeartbeats:float}, TransactionsSinceLastCheckpoint=%{NUMBER:TransactionsSinceLastCheckpoint:float}, TransactionsSinceLastLogRoll=%{NUMBER:TransactionsSinceLastLogRoll:float}, LastWrittenTransactionId=%{NUMBER:LastWrittenTransactionId:float}, LastCheckpointTime=%{NUMBER:LastCheckpointTime:float}, CapacityTotal=%{NUMBER:CapacityTotal:float}, CapacityTotalGB=%{NUMBER:CapacityTotalGB:float}, CapacityUsed=%{NUMBER:CapacityUsed:float}, CapacityUsedGB=%{NUMBER:CapacityUsedGB:float}, CapacityRemaining=%{NUMBER:CapacityRemaining:float}, CapacityRemainingGB=%{NUMBER:CapacityRemainingGB:float}, CapacityUsedNonDFS=%{NUMBER:CapacityUsedNonDFS:float}, TotalLoad=%{NUMBER:TotalLoad:float}, SnapshottableDirectories=%{NUMBER:SnapshottableDirectories:float}, Snapshots=%{NUMBER:Snapshots:float}, BlocksTotal=%{NUMBER:BlocksTotal:float}, FilesTotal=%{NUMBER:FilesTotal:float}, PendingReplicationBlocks=%{NUMBER:PendingReplicationBlocks:float}, UnderReplicatedBlocks=%{NUMBER:UnderReplicatedBlocks:float}, CorruptBlocks=%{NUMBER:CorruptBlocks:float}, ScheduledReplicationBlocks=%{NUMBER:ScheduledReplicationBlocks:float}, PendingDeletionBlocks=%{NUMBER:PendingDeletionBlocks:float}, ExcessBlocks=%{NUMBER:ExcessBlocks:float}, PostponedMisreplicatedBlocks=%{NUMBER:PostponedMisreplicatedBlocks:float}, PendingDataNodeMessageCount=%{NUMBER:PendingDataNodeMessageCount:float}, MillisSinceLastLoadedEdits=%{NUMBER:MillisSinceLastLoadedEdits:float}, BlockCapacity=%{NUMBER:BlockCapacity:float}, StaleDataNodes=%{NUMBER:StaleDataNodes:float}, TotalFiles=%{NUMBER:TotalFiles:float}"]

     #dfs.FSNamesystem(bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, HAState=%{WORD:HAState}, Hostname=%{HOSTNAME:hostname}, BlocksTotal=%{NUMBER:BlocksTotal:float}, MissingBlocks=%{NUMBER:MissingBlocks:float}, MissingReplOneBlocks=%{NUMBER:MissingReplOneBlocks:float}, ExpiredHeartbeats=%{NUMBER:ExpiredHeartbeats:float}, TransactionsSinceLastCheckpoint=%{NUMBER:TransactionsSinceLastCheckpoint:float}, TransactionsSinceLastLogRoll=%{NUMBER:TransactionsSinceLastLogRoll:float}, LastWrittenTransactionId=%{NUMBER:LastWrittenTransactionId:float}, LastCheckpointTime=%{NUMBER:LastCheckpointTime:float}, UnderReplicatedBlocks=%{NUMBER:UnderReplicatedBlocks:float}, CorruptBlocks=%{NUMBER:CorruptBlocks:float}, CapacityTotal=%{NUMBER:CapacityTotal:float}, CapacityTotalGB=%{NUMBER:CapacityTotalGB:float}, CapacityUsed=%{NUMBER:CapacityUsed:float}, CapacityUsedGB=%{NUMBER:CapacityUsedGB:float}, CapacityRemaining=%{NUMBER:CapacityRemaining:float}, CapacityRemainingGB=%{NUMBER:CapacityRemainingGB:float}, CapacityUsedNonDFS=%{NUMBER:CapacityUsedNonDFS:float}, TotalLoad=%{NUMBER:TotalLoad:float}, SnapshottableDirectories=%{NUMBER:SnapshottableDirectories:float}, Snapshots=%{NUMBER:Snapshots:float}, FilesTotal=%{NUMBER:FilesTotal:float}, PendingReplicationBlocks=%{NUMBER:PendingReplicationBlocks:float}, ScheduledReplicationBlocks=%{NUMBER:ScheduledReplicationBlocks:float}, PendingDeletionBlocks=%{NUMBER:PendingDeletionBlocks:float}, ExcessBlocks=%{NUMBER:ExcessBlocks:float}, PostponedMisreplicatedBlocks=%{NUMBER:PostponedMisreplicatedBlocks:float}, PendingDataNodeMessageCount=%{NUMBER:PendingDataNodeMessageCount:float}, MillisSinceLastLoadedEdits=%{NUMBER:MillisSinceLastLoadedEdits:float}, BlockCapacity=%{NUMBER:BlockCapacity:float}, StaleDataNodes=%{NUMBER:StaleDataNodes:float}, TotalFiles=%{NUMBER:TotalFiles:float}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, GcNumWarnThresholdExceeded=%{NUMBER:GcNumWarnThresholdExceeded:float}, GcNumInfoThresholdExceeded=%{NUMBER:GcNumInfoThresholdExceeded:float}, GcTotalExtraSleepTime=%{NUMBER:GcTotalExtraSleepTime:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

  }
}

if [type]=="secondarynamenode-metrics"{
  grok{
    break_on_match => false
     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll:float}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]
  }
}

if [type]=="reducetask-metrics"{
    grok{
      break_on_match => false

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountPS Scavenge=%{NUMBER:GcCountPS_Scavenge:float}, GcTimeMillisPS Scavenge=%{NUMBER:GcTimeMillisPS_Scavenge:float}, GcCountPS MarkSweep=%{NUMBER:GcCountPS_MarkSweep:float}, GcTimeMillisPS MarkSweep=%{NUMBER:GcTimeMillisPS_MarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER:DroppedPubAll:float}"]
    }
}

if [type]=="maptask-metrics"{
    grok{
      break_on_match => false

      #jvm.JvmMetrics
      match=>["message", "\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountPS Scavenge=%{NUMBER:GcCountPS_Scavenge:float}, GcTimeMillisPS Scavenge=%{NUMBER:GcTimeMillisPS_Scavenge:float}, GcCountPS MarkSweep=%{NUMBER:GcCountPS_MarkSweep:float}, GcTimeMillisPS MarkSweep=%{NUMBER:GcTimeMillisPS_MarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

    }
}

if [type]=="mrappmaster-metrics"{
    grok{
      break_on_match => false

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NOTSPACE:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountPS Scavenge=%{NUMBER:GcCountPS_Scavenge}, GcTimeMillisPS Scavenge=%{NUMBER:GcTimeMillisPS_Scavenge}, GcCountPS MarkSweep=%{NUMBER:GcCountPS_MarkSweep}, GcTimeMillisPS MarkSweep=%{NUMBER:GcTimeMillisPS_MarkSweep}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

     #mapred.MRAppMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, JobsSubmitted=%{NUMBER:JobsSubmitted:float}, JobsCompleted=%{NUMBER:JobsCompleted:float}, JobsFailed=%{NUMBER:JobsFailed:float}, JobsKilled=%{NUMBER:JobsKilled:float}, JobsPreparing=%{NUMBER:JobsPreparing:float:float}, JobsRunning=%{NUMBER:JobsRunning:float}, MapsLaunched=%{NUMBER:MapsLaunched:float}, MapsCompleted=%{NUMBER:MapsCompleted:float}, MapsFailed=%{NUMBER:MapsFailed:float}, MapsKilled=%{NUMBER:MapsKilled:float}, MapsRunning=%{NUMBER:MapsRunning:float}, MapsWaiting=%{NUMBER:MapsWaiting:float}, ReducesLaunched=%{NUMBER:ReducesLaunched:float}, ReducesCompleted=%{NUMBER:ReducesCompleted:float}, ReducesFailed=%{NUMBER:ReducesFailed:float}, ReducesKilled=%{NUMBER:ReducesKilled:float}, ReducesRunning=%{NUMBER:ReducesRunning:float}, ReducesWaiting=%{NUMBER:ReducesWaiting:float}"]

     #rpc.rpc
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

     #rpc.rpc(bis)
     match=>["message", "\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, RpcClientBackoff=%{NUMBER:RpcClientBackoff:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

     #rpcdetailed
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, GetJobReportNumOps=%{NUMBER:GetJobReportNumOps}, GetJobReportAvgTime=%{NUMBER:GetJobReportAvgTime}, GetTaskAttemptCompletionEventsNumOps=%{NUMBER:GetTaskAttemptCompletionEventsNumOps}, GetTaskAttemptCompletionEventsAvgTime=%{NUMBER:GetTaskAttemptCompletionEventsAvgTime}"]

     #rpcdetailed (bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, DoneNumOps=%{NUMBER:DoneNumOps}, DoneAvgTime=%{NUMBER:DoneAvgTime}, FatalErrorNumOps=%{NUMBER:FatalErrorNumOps}, FatalErrorAvgTime=%{NUMBER:FatalErrorAvgTime}, GetTaskNumOps=%{NUMBER:GetTaskNumOps}, GetTaskAvgTime=%{NUMBER:GetTaskAvgTime}, CanCommitNumOps=%{NUMBER:CanCommitNumOps}, CanCommitAvgTime=%{NUMBER:CanCommitAvgTime}, CommitPendingNumOps=%{NUMBER:CommitPendingNumOps}, CommitPendingAvgTime=%{NUMBER:CommitPendingAvgTime}, FsErrorNumOps=%{NUMBER:FsErrorNumOps}, FsErrorAvgTime=%{NUMBER:FsErrorAvgTime}, ShuffleErrorNumOps=%{NUMBER:ShuffleErrorNumOps}, ShuffleErrorAvgTime=%{NUMBER:ShuffleErrorAvgTime}, GetMapCompletionEventsNumOps=%{NUMBER:GetMapCompletionEventsNumOps}, GetMapCompletionEventsAvgTime=%{NUMBER:GetMapCompletionEventsAvgTime}, PingNumOps=%{NUMBER:PingNumOps}, PingAvgTime=%{NUMBER:PingAvgTime}, ReportDiagnosticInfoNumOps=%{NUMBER:ReportDiagnosticInfoNumOps}, ReportDiagnosticInfoAvgTime=%{NUMBER:ReportDiagnosticInfoAvgTime}, StatusUpdateNumOps=%{NUMBER:StatusUpdateNumOps}, StatusUpdateAvgTime=%{NUMBER:StatusUpdateAvgTime}, ReportNextRecordRangeNumOps=%{NUMBER:ReportNextRecordRangeNumOps}, ReportNextRecordRangeAvgTime=%{NUMBER:ReportNextRecordRangeAvgTime}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime}, DroppedPubAll=%{NUMBER:DroppedPubAll}"]
    }
}
{% else %}
#No HDFS defined
{% endif %}
}
output {
    if [type]=="yarn-history"{
        elasticsearch {
        #cluster  => {{ESCluster}} # this matches out elasticsearch cluster.name; Only for LS version 1.5.x
        #protocol => http #Only version 1.5.x
        hosts => ["{{EShostIP}}:{{EShostPort}}"] #For version 2.x of logstash
        {% if not myIndex %}
        index => "logstash-%{+YYY.MM.dd}"
        {% else %}
        index => "{{myIndex}}-%{+YYY.MM.dd}"
        {% endif %}
        document_id =>"yarn_history"
        }
    } else {
        elasticsearch {
        #cluster  => {{ESCluster}} # this matches out elasticsearch cluster.name; Only for LS version 1.5.x
        #protocol => http #Only version 1.5.x
        hosts => ["{{EShostIP}}:{{EShostPort}}"] #For version 2.x of logstash
        {% if not myIndex %}
        index => "logstash-%{+YYY.MM.dd}"
        {% else %}
        index => "{{myIndex}}-%{+YYY.MM.dd}"
        {% endif %}
        }
    }
}
