# DICE Storm Cluster Vagrant development env deploy
# beta v0.2.1
#
#Copyright 201=7, Institute e-Austria, Timisoara, Romania
#    http://www.ieat.ro/
#Developers:
# * Gabriel Iuhasz, iuhasz.gabriel@info.uvt.ro
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at:
#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

$master_script = <<SCRIPT
#!/bin/bash
apt-get -q -y --force-yes install zookeeper
apt-get install zookeeperd -y
cp /vagrant/nimbus.conf /etc/init/nimbus.conf
cp /vagrant/ui.conf /etc/init/ui.conf

#Configuration file setup
mv /home/vagrant/apache-storm-0.9.5/conf/storm.yaml /home/vagrant/apache-storm-0.9.5/conf/storm.backup
#ln -sf /vagrant/storm_nimbus.yaml /home/vagrant/apache-storm-0.9.5/conf/storm.yaml
cp /vagrant/storm_nimbus.yaml /home/vagrant/apache-storm-0.9.5/conf/storm.yaml

start zookeeper
start nimbus
start ui
SCRIPT

$supervisor_script = <<SCRIPT
#!/bin/bash

#Configuration file setup
mv /home/vagrant/apache-storm-0.9.5/conf/storm.yaml /home/vagrant/apache-storm-0.9.5/conf/storm.backup
#ln -sf /vagrant/storm_supervisor.yaml /home/vagrant/apache-storm-0.9.5/conf/storm.yaml
cp /vagrant/storm_supervisor.yaml /home/vagrant/apache-storm-0.9.5/conf/storm.yaml

cp /vagrant/supervisor.conf /etc/init/supervisor.conf
start supervisor
SCRIPT


$hosts_script = <<SCRIPT
apt-get update
apt-get install wget -y
apt-get install unzip -y
apt-get install python-dev -y
apt-get install python-lxml -y
apt-get install python-pip -y
apt-get install git -y
apt-get install htop -y


# Install Java 8
echo "Installing Oracle Java 1.8 ...."
apt-get install python-software-properties -y
echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
add-apt-repository ppa:webupd8team/java -y
apt-get update -y
apt-get install oracle-java8-installer -y
apt-get install ant -y


#Install Monitoring auxiliary tools
apt-get install ganglia-monitor -y
apt-get install rrdtool -y

wget https://jmxtrans.googlecode.com/files/jmxtrans_239-1_all.deb
dpkg -i jmxtrans_239-1_all.deb


#Install Storm
cd /home/vagrant
wget http://www.eu.apache.org/dist/storm/apache-storm-0.9.5/apache-storm-0.9.5.tar.gz
tar xvf apache-storm-0.9.5.tar.gz


#Fix owner
chown -R vagrant.vagrant apache-storm-0.9.5/

#upload ganglia conf
mv /etc/ganglia/gmond.conf /etc/ganglia/gmond.backup
cp /vagrant/gmond.conf /etc/ganglia/gmond.conf

#Install dmon-agent 
cd /opt
wget https://github.com/dice-project/DICE-Monitoring/releases/download/latest-agent/dmon-agent.tar.gz
tar xvf dmon-agent.tar.gz
cd /opt/dmon-agent/
pip install -r requirements.txt
bash dmon-agent.sh

cat > /etc/hosts <<EOF
127.0.0.1       localhost
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF
SCRIPT


# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/trusty64"

  # Manage /etc/hosts on host and VMs
  config.hostmanager.enabled = false
  config.hostmanager.manage_host = true
  config.hostmanager.include_offline = true
  config.hostmanager.ignore_private_ip = false

  config.vm.define :master do |master|
    master.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-storm1"
      v.customize ["modifyvm", :id, "--memory", "4096"]
    end
    master.vm.network :private_network, ip: "10.211.56.100"
    master.vm.hostname = "vm-cluster-storm1"
    master.vm.network :forwarded_port, host:8080, guest: 8080
    master.vm.network :forwarded_port, host:12345, guest: 12345
    master.vm.provision :shell, :inline => $hosts_script
    master.vm.provision :hostmanager
    master.vm.provision :shell, :inline => $master_script
  end

  config.vm.define :slave1 do |slave1|
    slave1.vm.box = "ubuntu/trusty64"
    slave1.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-strom2"
      v.customize ["modifyvm", :id, "--memory", "4096"]
    end
    slave1.vm.network :private_network, ip: "10.211.56.101"
    slave1.vm.hostname = "vm-cluster-storm2"
    slave1.vm.network :forwarded_port, host:12346, guest: 12346
    slave1.vm.provision :shell, :inline => $hosts_script
    slave1.vm.provision :hostmanager
    slave1.vm.provision :shell, :inline => $supervisor_script
    
  end

  config.vm.define :slave2 do |slave2|
    slave2.vm.box = "ubuntu/trusty64"
    slave2.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-storm3"
      v.customize ["modifyvm", :id, "--memory", "4096"]
    end
    slave2.vm.network :private_network, ip: "10.211.56.102"
    slave2.vm.hostname = "vm-cluster-storm3"
    slave2.vm.network :forwarded_port, host:12346, guest: 12347
    slave2.vm.provision :shell, :inline => $hosts_script
    slave2.vm.provision :shell, :inline => $supervisor_script
    slave2.vm.provision :hostmanager
  end

  config.vm.define :slave3 do |slave3|
    slave3.vm.box = "ubuntu/trusty64"
    slave3.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-storm4"
      v.customize ["modifyvm", :id, "--memory", "4096"]
    end
    slave3.vm.network :private_network, ip: "10.211.56.103"
    slave3.vm.hostname = "vm-cluster-storm4"
    slave3.vm.network :forwarded_port, host:12346, guest: 12348
    slave3.vm.provision :shell, :inline => $hosts_script
    slave3.vm.provision :shell, :inline => $supervisor_script
    slave3.vm.provision :hostmanager
  end

end
